// Code generated by MockGen. DO NOT EDIT.
// Source: server/grpc_server.go
//
// Generated by this command:
//
//	mockgen -source=server/grpc_server.go -destination=mocks/grpc_server_mock.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	time "time"

	"github.com/golang/mock/gomock"
)

// MockJWTInterface is a mock of JWTInterface interface.
type MockJWTInterface struct {
	ctrl     *gomock.Controller
	recorder *MockJWTInterfaceMockRecorder
}

// MockJWTInterfaceMockRecorder is the mock recorder for MockJWTInterface.
type MockJWTInterfaceMockRecorder struct {
	mock *MockJWTInterface
}

// NewMockJWTInterface creates a new mock instance.
func NewMockJWTInterface(ctrl *gomock.Controller) *MockJWTInterface {
	mock := &MockJWTInterface{ctrl: ctrl}
	mock.recorder = &MockJWTInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJWTInterface) EXPECT() *MockJWTInterfaceMockRecorder {
	return m.recorder
}

// CheckToken mocks base method.
func (m *MockJWTInterface) CheckToken(token string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckToken", token)
	ret0, _ := ret[0].(error)
	return ret0
}

// CheckToken indicates an expected call of CheckToken.
func (mr *MockJWTInterfaceMockRecorder) CheckToken(token any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckToken", reflect.TypeOf((*MockJWTInterface)(nil).CheckToken), token)
}

// CreateToken mocks base method.
func (m *MockJWTInterface) CreateToken() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateToken")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateToken indicates an expected call of CreateToken.
func (mr *MockJWTInterfaceMockRecorder) CreateToken() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateToken", reflect.TypeOf((*MockJWTInterface)(nil).CreateToken))
}

// GetExpiredAt mocks base method.
func (m *MockJWTInterface) GetExpiredAt() time.Duration {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetExpiredAt")
	ret0, _ := ret[0].(time.Duration)
	return ret0
}

// GetExpiredAt indicates an expected call of GetExpiredAt.
func (mr *MockJWTInterfaceMockRecorder) GetExpiredAt() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetExpiredAt", reflect.TypeOf((*MockJWTInterface)(nil).GetExpiredAt))
}
