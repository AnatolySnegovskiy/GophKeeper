name: Go Build and Release

on:
  push:
    tags:
      - 'v*.*.*'  # Запускать при создании тега вида v1.0.0

jobs:
  build:
    uses: ./.github/workflows/build-linux.yml
    with:
    # Передайте необходимые параметры, если требуется

  build-windows:
    uses: ./.github/workflows/build-windows.yml
    with:
    # Передайте необходимые параметры, если требуется

  build-macos:
    uses: ./.github/workflows/build-macos.yml
    with:
    # Передайте необходимые параметры, если требуется

  release:
    needs: [build, build-windows, build-macos]
    runs-on: ubuntu-22.04
    if: ${{ always() && needs.build.result == 'success' && needs.build-windows.result == 'success' && needs.build-macos.result == 'success' }}

    steps:
      - name: Download build artifacts for Linux
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts-linux
          path: release/

      - name: Download build artifacts for Windows
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts-windows
          path: release/

      - name: Download build artifacts for macOS
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts-darwin
          path: release/

      - name: List release directory
        run: ls -R release/
        shell: bash

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Linux Release Asset
        if: success() && steps.create_release.outputs.upload_url != ''
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/linux.zip
          asset_name: linux.zip
          asset_content_type: application/zip

      - name: Upload Windows Release Asset
        if: success() && steps.create_release.outputs.upload_url != ''
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/windows.zip
          asset_name: windows.zip
          asset_content_type: application/zip

      - name: Upload macOS Release Asset
        if: success() && steps.create_release.outputs.upload_url != ''
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/darwin.zip
          asset_name: darwin.zip
          asset_content_type: application/zip
