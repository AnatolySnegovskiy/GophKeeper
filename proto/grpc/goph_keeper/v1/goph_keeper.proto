syntax = "proto3";

package grpc.goph_keeper.v1;

option go_package = "GophKeeper/proto/grpc/server/v1";

service GophKeeperV1Service {
  // User registration
  rpc RegisterUser(RegisterUserRequest) returns (RegisterUserResponse);

  // User authentication
  rpc AuthenticateUser(AuthenticateUserRequest) returns (AuthenticateUserResponse);

  // Verifying 2FA
  rpc Verify2FA(Verify2FARequest) returns (Verify2FAResponse);

  // Storing private data (streaming)
  rpc UploadData(stream UploadDataRequest) returns (UploadDataResponse);

  // Listing private data
  rpc GetStoreDataList(GetStoreDataListRequest) returns (GetStoreDataListResponse);

  // Requesting private data (streaming)
  rpc DownloadData(DownloadDataRequest) returns (stream DownloadDataResponse);
}

// User Registration
message RegisterUserRequest {
  string username = 1;
  string password = 2;
  string ssh_pub_key = 3;
}

// User Registration Response
message RegisterUserResponse {
  bool success = 1;
  string message = 2;
}

// User Authentication
message AuthenticateUserRequest {
  string username = 1;
  string password = 2;
}

// User Authentication Response
message AuthenticateUserResponse {
  bool success = 1;
  string token = 2;
}

// Verifying 2FA (2FA) token from ssh cache
message Verify2FARequest {
  string token = 1;
}

// Verifying 2FA (2FA) response
message Verify2FAResponse {
  bool success = 1;
  string jwt_token = 2;
}

// Storing Private Data (streaming)
message UploadDataRequest {
  DataType data_type = 1;  // e.g., "login_password", "text", "binary", "card"
  bytes data = 2;
  string metadata = 3;
  string user_path = 4;
}

// Storing Private Data Response
message UploadDataResponse {
  bool success = 1;
  string message = 2;
}

// Listing Private Data
message DataEntry {
  DataType data_type = 1;  // e.g., "login_password", "text", "binary", "card"
  bytes data = 2;
  string metadata = 3;
}

// Listing Private Data
message GetStoreDataListRequest {
    DataType data_type = 1;
}

// Requesting Private Data (streaming)
message DownloadDataRequest {
  string uuid = 1;
}

// Requesting Private Data
message GetStoreDataListResponse {
  repeated ListDataEntry entries = 1;
}

// Requesting Private Data
message ListDataEntry {
  string uuid = 1;
  string metadata = 2;
  string user_path = 3;
}

// Requesting Private Data
message DownloadDataResponse {
  bool success = 1;
  bytes data = 2;
  string metadata = 3;
  string message = 4;
}

// Enum for Data Types
enum DataType {
  DATA_TYPE_UNSPECIFIED = 0; // Default value, indicates unspecified data type
  DATA_TYPE_LOGIN_PASSWORD = 1;
  DATA_TYPE_BINARY = 3;
  DATA_TYPE_CARD = 4;
}